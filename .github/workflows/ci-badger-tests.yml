name: ci-badger-tests
on:
  push:
    branches:
      - main
      - 'release/v*'
  pull_request_target:
    branches:
      - main
      - 'release/v*'
  schedule:
    - cron: "*/30 * * * *"
jobs:
  badger-tests-pr:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3 # checkout merge commit
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Install Dependencies
        run: make dependency
      - name: Run Badger Tests
        run: make test
      - name: Install Goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send Coverage Results
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLSIO_TOKEN }}
        run: goveralls -coverprofile=cover.out
  badger-tests:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Get Go Version
        run: |
          #!/bin/bash
          GOVERSION=$({ [ -f .go-version ] && cat .go-version; })
          echo "GOVERSION=$GOVERSION" >> $GITHUB_ENV
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVERSION }}
      - name: Install Dependencies
        run: make dependency
      - name: Run Badger Tests
        run: make test
      - name: Install Goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send Coverage Results
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLSIO_TOKEN }}
        run: goveralls -coverprofile=cover.o
